#!/usr/bin/env python

# author: Lu LIU
# created at: 2014-07-25
# Description: a sample of how to use pymmspa to find multimodal shortest paths

from pymmspa import PathFinder, RoutingOptions, RoutingPlan, RoutingPlanInferer, MultimodalPath

# load multimodal graph set data stored in plain text defined by myself
PathFinder.load_networks('/Users/user/Projects/mmspa/demo/data/UM')
# More data formats will be supported in the future, e.g.
# PathFinder.load_networks('/Users/user/Research/phd-work/data/UM/GEXF/mmgs.gexf', 'GEXF')
# PathFinder.load_networks('dbname=multimodal_munich,user=liulu,password=workhard', 'PGSQL')
# etc.

# For multimodal routing, a bunch of options are necessary other than routing
# origin and destination. The acceptable format of multimodal routing options
# are stored in a JSON file.
options = RoutingOptions.load_options(
    '/Users/user/Projects/mmspa/demo/data/routing_options.json')

# Routing plans of multimodal paths calculation can be generated by the
# inference engine with the routing options as inputs
plans = RoutingPlanInferer.generate_routing_plan(options)

# Multimodal optimal paths can be found with the routing plan. Routing
# algorithm can be Multimodal TwoQ (MMTQ), Multimodal Dijkstra (MMD)
# or Multimodal Bellman-Ford (MMBF). By default, it is MMTQ.
paths = PathFinder.find_paths(plans, 'MMTQ')

# Render the calculated multimodal path on a map. The base map service is
# customizable. Here I use MapBox. The rendered result is a png file whose
# size (width and height) should be given as parameters.
path_id = 0
for p in paths:
    path_file_name = str(path_id) + '.png'
    p.render_on_map(800, 600, path_file_name, 'MAPBOX')
    path_id += 1

# Multimodal graph set should be disposed explicitly since they are external
# resources. This action is necessary only if no path calculation would be
# performed any more.
PathFinder.dispose_networks()
